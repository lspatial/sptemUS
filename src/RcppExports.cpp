// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// bKriging
Rcpp::NumericVector bKriging(Rcpp::DataFrame samples, Rcpp::DataFrame rtargets, std::string tarStr, Rcpp::NumericVector paras, std::string model);
RcppExport SEXP _sptemUS_bKriging(SEXP samplesSEXP, SEXP rtargetsSEXP, SEXP tarStrSEXP, SEXP parasSEXP, SEXP modelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type samples(samplesSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type rtargets(rtargetsSEXP);
    Rcpp::traits::input_parameter< std::string >::type tarStr(tarStrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type paras(parasSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    rcpp_result_gen = Rcpp::wrap(bKriging(samples, rtargets, tarStr, paras, model));
    return rcpp_result_gen;
END_RCPP
}
// noweiAvg
Rcpp::DataFrame noweiAvg(std::string path, std::string preStr, std::string idStr, std::string dateStr);
RcppExport SEXP _sptemUS_noweiAvg(SEXP pathSEXP, SEXP preStrSEXP, SEXP idStrSEXP, SEXP dateStrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    Rcpp::traits::input_parameter< std::string >::type preStr(preStrSEXP);
    Rcpp::traits::input_parameter< std::string >::type idStr(idStrSEXP);
    Rcpp::traits::input_parameter< std::string >::type dateStr(dateStrSEXP);
    rcpp_result_gen = Rcpp::wrap(noweiAvg(path, preStr, idStr, dateStr));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello
List rcpp_hello();
RcppExport SEXP _sptemUS_rcpp_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello());
    return rcpp_result_gen;
END_RCPP
}
// weightedstat
Rcpp::DataFrame weightedstat(std::string path, std::string modelpath, std::string metric, std::string preStr, std::string idStr, std::string dateStr);
RcppExport SEXP _sptemUS_weightedstat(SEXP pathSEXP, SEXP modelpathSEXP, SEXP metricSEXP, SEXP preStrSEXP, SEXP idStrSEXP, SEXP dateStrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type path(pathSEXP);
    Rcpp::traits::input_parameter< std::string >::type modelpath(modelpathSEXP);
    Rcpp::traits::input_parameter< std::string >::type metric(metricSEXP);
    Rcpp::traits::input_parameter< std::string >::type preStr(preStrSEXP);
    Rcpp::traits::input_parameter< std::string >::type idStr(idStrSEXP);
    Rcpp::traits::input_parameter< std::string >::type dateStr(dateStrSEXP);
    rcpp_result_gen = Rcpp::wrap(weightedstat(path, modelpath, metric, preStr, idStr, dateStr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sptemUS_bKriging", (DL_FUNC) &_sptemUS_bKriging, 5},
    {"_sptemUS_noweiAvg", (DL_FUNC) &_sptemUS_noweiAvg, 4},
    {"_sptemUS_rcpp_hello", (DL_FUNC) &_sptemUS_rcpp_hello, 0},
    {"_sptemUS_weightedstat", (DL_FUNC) &_sptemUS_weightedstat, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_sptemUS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
